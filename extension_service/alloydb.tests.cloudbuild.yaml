# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: Install dependencies
    name: python:3.11
    dir: extension_service
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "-r", "requirements-test.txt", "--user"]

  - id: Create database
    name: postgres
    entrypoint: /bin/bash
    env:
      - "PGUSER=${_DATABASE_USER}"
    secretEnv:
      - PGPASSWORD
    args:
      - '-c'
      - |
        psql -h ${_DATABASE_HOST} -c "CREATE DATABASE ${_DATABASE_NAME};" || echo "Already created."
        psql -h ${_DATABASE_HOST} -d ${_DATABASE_NAME} -c 'CREATE EXTENSION vector;' || echo "Already created."

  - id: Init database
    name: python:3.11
    dir: extension_service
    secretEnv:
      - PGPASSWORD
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        cp example-config.yml config.yml
        sed -i "s/DB_HOST/${_DATABASE_HOST}/g" config.yml
        sed -i "s/DB_NAME/${_DATABASE_NAME}/g" config.yml
        sed -i "s/DB_USER/${_DATABASE_USER}/g" config.yml
        sed -i "s/PASSWORD/$$PGPASSWORD/g" config.yml
        python run_database_init.py

  - id: Run Alloy DB integration tests
    name: python:3.11
    dir: extension_service
    env:
      - "DB_NAME=${_DATABASE_NAME}"
      - "DB_USER=${_DATABASE_USER}"
      - "DB_HOST=${_DATABASE_HOST}"
    secretEnv:
      - PGPASSWORD
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        export DB_PASS=$$PGPASSWORD
        python -m pytest

  - id: Clean database
    name: postgres
    entrypoint: /bin/bash
    env:
      - "PGUSER=${_DATABASE_USER}"
    secretEnv:
      - PGPASSWORD
    args:
      - '-c'
      - |
        psql -h ${_DATABASE_HOST} -d ${_DATABASE_USER} -c "DROP DATABASE IF EXISTS ${_DATABASE_NAME};"


substitutions:
  _DATABASE_NAME: test_${SHORT_SHA}
  _DATABASE_USER: postgres
  _DATABASE_HOST: 127.0.0.1
  _DATABASE_PASSWORD_KEY: alloy_db_pass

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/${_DATABASE_PASSWORD_KEY}/versions/latest
      env: PGPASSWORD
options:
  dynamic_substitutions: true
  pool:
    name: projects/$PROJECT_ID/locations/us-central1/workerPools/alloy-private-pool